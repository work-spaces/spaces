name: Build and Publish Binaries

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags

jobs:
  build-ubuntu:
    name: Build and Publish Ubuntu Binary
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          components: rustfmt, clippy

      - name: Build for Ubuntu
        run: cargo build --profile=release

      - name: Create binary artifact
        run: |
          mkdir -p artifacts
          zip artifacts/spaces-x86_64-unknown-linux-gnu-${{ github.ref_name }}.zip target/release/spaces
          
      - name: Publish release with Ubuntu binary
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref_name }} \
            artifacts/spaces-x86_64-unknown-linux-gnu-${{ github.ref_name }}.tar.xz --title "${{ github.ref_name }}" --notes "Release ${{ github.ref_name }} (Ubuntu binary packaged as .tar.xz)"
            
  build-matrix:
    name: Build and Upload Other OS Binaries
    needs: build-ubuntu
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        target: [x86_64-apple-darwin, x86_64-pc-windows-msvc]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          components: rustfmt, clippy

      - name: Build for ${{ matrix.os }}
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create binary artifact
        run: |
          mkdir -p artifacts
          cp target/${{ matrix.target }}/release/your_project_name artifacts/your_project_name-${{ matrix.target }}-${{ github.ref_name }}
        shell: bash

      - name: Upload binary to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} \
            artifacts/your_project_name-${{ matrix.target }}-${{ github.ref_name }} --clobber
